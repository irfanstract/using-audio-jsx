





/* FONTS AND COLOURS  */
/* inherited properties relating to font-family choice */     
body, button, input, 
#----e {              
    font-weight: bold ;
    font-family: 'Source Sans', 'Open Sans', 'Segoe UI', Tahoma, Verdana, sans-serif ;
    font-family: 'Source Sans', 'Open Sans', 'Segoe UI', Tahoma, Verdana, system, sans-serif ;
    line-height: 1.5em ;
    /* font-variant: unicase;            */
    font-variant: all-caps ;      
    font-variant: all-small-caps;      
    font-variant: all-petite-caps ;      
    /* font-variant: titling-caps ;       */
}
pre, code {
    font-family: Consolas, Monaco, Inconsolata, monospace; 
    font-variant: normal ;       
}   
a[href] {
    /* font-style: italic; */
}
a.button, 
button, 
input[type=button],
#----e {      
    font-variant: small-caps;
    /* font-variant: unicase;   
    font-variant: all-small-caps;          
    font-variant: all-petite-caps;   */
    font-variant: all-small-caps;      
    /* font-variant: unicase;        */
}         
div {
    font-size: 98% ;
}
/*  
  these elements by default override these properties .   
  override again to enforce 'ingerit' 
*/
code, a, button, input,      
#----e {
    font-size: 100% ;      
    text-align: inherit;        
}       
/*  
  define the font-size for the root element 
*/
body {
    font-size: 2.3vh ;
}
/*   
  (re) define the 'padding'
*/
td { 
    padding: 0.25em 0.75em 0.5em 0 ;
}  
/*        
  the white-space handling
*/
code {        
    white-space: pre;   
}
/* _ */
input[type=number] {
    text-align: end ;
    width: 6em ;
}       
/* 
 'cursor', 'filter'
*/
a.button,    
button, 
input[type=button],
#----e {
    cursor: pointer;                   
}
a.button:disabled , 
button:disabled,      
input[type=button]:disabled ,
#----e { 
    filter: contrast(0.1) brightness(1.8) ;
    cursor: default !important;    
}
/*  
  ??? 
*/
a.button { 
}
/*  
  'user-select'
*/
h1,h2,h3,h4,h5,h6, 
/* p,  */
/* span, strong, em, */
/* blockquote, */ pre, code , i, u, 
td, 
#----e {
    -webkit-user-select: all;  
    user-select: all;          
}
input:read-only, input[readonly] {
    -webkit-user-select: all ;
    user-select: all ;
}
input[type=range] {
    -webkit-user-select: none;   
    user-select: none;
}
a.button, 
button, 
input[type=button],
#----e { 
    -webkit-user-select: none;     
    user-select: none ;
}
a.button:disabled , 
button:disabled,  
input[type=button]:disabled ,    
#----e {  
    -webkit-user-select: none !important ;   
    user-select: none !important ;
}  
/*  
  define the 'color's and border-colours and (in the future) border-width .     
  note that, for border-style,     
  the right place will be in the 'DISPLAYS, LAYOUTS, POSITIONS' below
*/
a {
    border-top-color: var(--BC) !important; 
}
button {
    border-color:  var(--BC) !important ;  
}
a, button {
    --BC: transparent ;
}  
a.button:disabled , 
button:disabled,       
input[type=button]:disabled ,
#----e { 
    --BC: transparent !important ;                  
}    
a:hover,              
a:focus-within ,       
button:hover, 
button:focus-within , 
#---e {
    /* border-top-color: beige !important ;      */
    --BC: beige ;              
}     
a[href] {      
    /*  
      these elements by default override these properties .   
      override again to enforce 'ingerit' 
    */
    color: inherit;
}         
a.button, 
button, 
input[type=button],
#----e {
    border: 0.05em solid transparent ;
    border-block-end-width: 0.25em ;
    border-radius: 0.1em ;      
}
a.button { 
    border-top-style: solid; 
    border-block-start-style: solid; 
}                     
pre ,                           
code.long-enough ,     
#----e {           
    background-color: transparent;    
}      
thead:hover {               
    background-color: transparent;    
    color: white;                     
}       
code.numeric {
    color: blue;
}
pre ,                
code.long-enough ,
#----e {       
    border-color: transparent;      
}
code {  
    border-color: gray;  
    border-bottom-color: currentColor; 
}           
code:hover, 
code:focus-within,    
pre:hover ,
pre:focus-within ,  
#---e {
    border-top-color: beige;
}          
pre , 
code.long-enough ,  
code.numeric ,     
#----e { 
    border-width: 0.05em ;                       
}     
code, code.long-enough, pre { 
    border-width: 0.1em ;   
    border-radius: 0.25em ;
    border-color: currentColor ;  
}
pre , 
code.long-enough ,  
code.numeric ,          
#----e {
    border-style: solid;    
    /* border-style: none;            */
}               
a.button,    
button, 
input[type=button],
#----e { 
    background: gray;  
    color: white; 
    padding: 0.35em;
    margin: 0 ; 
}                 
/* 
  the 'selection'      
*/
::selection {
    cursor: nesw-resize !important ; 
    background: rgb(0, 128, 255) !important; 
    color: white !important ;
}  
  
          
    



  

/*  
 *  DISPLAYS, POSITIONS, BORDER-STYLE(S)   .  
 *  these properties are better grouped together   
*/    
nav {
    border-style: solid;
}
code.long-enough ,
#----e {                
    display: inline-block;
    box-sizing: border-box;
    min-height: calc(3 * 2em );
    max-width: 100% ;  
    overflow-x: auto ;
    white-space: pre;                
}
code.numeric {     
    display: inline-block;     
    width: 4em ;     
    text-align: end;      
    padding: 0 0.25em ;                    
    overflow-x: hidden;
}
pre {      
    display: block; 
    box-sizing: border-box;
    min-height: calc(5 * 2em );
    max-width: 100% ; 
    overflow-x: auto ;
    white-space: pre;   
}     
a.button,    
button, 
input[type=button],
#----e {  
    position: relative;     
    box-sizing: content-box; 
    text-decoration: none ;
}    
a::after, a::before,
#---e { 
    content: " ";
    display: inline-block;
    width: 0.5em ;
}
a:hover, 
a:focus-within , 
#---e { 
}
tr::before {
    content: "â—¾";
    width: 1em;
    display: inline-block;
}    
td { 
    border: 0.05em solid currentcolor ; 
    vertical-align: text-top ;
    min-width: 1.5em ;
} 
table { border-collapse: collapse ; } 
thead {
    position: sticky ;    
    top: 0 ;     
    backdrop-filter: blur(0.05em) ;       
    /* pointer-events: none;       */    
    backdrop-filter: blur(0.35em) ;                     
    opacity: 1.0 ; 
}
thead:hover {
    position: relative ;                   
    opacity: 0.5 ;
}       
thead > tr > td {
    position: sticky;
    left: 0 ;
    right: 0 ;
    backdrop-filter: blur(0.35em) ;     
}
video, image {
    width: calc(min(50vw, 50vh ) );
    height: calc(min(50vw, 50vh ) ) ;
    background: black;
}
*::-webkit-scrollbar-thumb {
    border: 0.05em solid white;
} 




@media screenp {
    *::-webkit-scrollbar {
        opacity: 0.5 ;
        width : 0.875em ;
        height: 0.875em ;   
        background-color: rgba(128, 128, 128, 0.5) ;
        cursor: ew-resize;
    }
    *::-webkit-scrollbar:hover {      
        opacity: 1  ;    
        width : 1.5em ;
        height: 1.5em ;   
        background-color: rgb(235, 235, 235) ;      
    }
    *::-webkit-scrollbar-thumb {
        background-color: currentColor;
        opacity: 0.5 ;
        transition: all 0.2s ease-out ;
    }
    *::-webkit-scrollbar-thumb:hover {
        background-color: white ;      
        opacity: 1 ;
    }
    *::-webkit-scrollbar-track {
        background-color: transparent;
    }
}








*, 
h1,h2,h3,h4,h5,h6, p, blockquote, pre, code ,
#----e {
    transition: all 0.25s ease-out ;  
}
body {
    margin: 0 ;
}
